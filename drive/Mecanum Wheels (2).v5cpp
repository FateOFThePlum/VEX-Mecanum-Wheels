{"mode":"Text","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ncontroller Controller1 = controller(primary);\nmotor Motor1 = motor(PORT1, ratio18_1, false);\n\nmotor Motor2 = motor(PORT2, ratio18_1, false);\n\nmotor Motor3 = motor(PORT3, ratio18_1, false);\n\nmotor Motor4 = motor(PORT4, ratio18_1, false);\n\n\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n#pragma endregion VEXcode Generated Robot Configuration\nfloat X1, X2, Y1, OVER;\n\nvoid Mecanum(){\n  X1 = Controller1.Axis4.position();\n  Y1 = Controller1.Axis3.position();\n  X2 = Controller1.Axis1.position();\n  X2 = X2*0.75; // Allows For Higher Turning Speed\n\n  Motor1.setVelocity((OVER * (Y1 + X1 + X2)), percent);\n  Motor2.setVelocity((OVER * (Y1 + X1 + X2)), percent);\n  Motor3.setVelocity((OVER * (Y1 - X1 + X2)), percent);\n  Motor4.setVelocity((OVER * (Y1 - X1 + X2)), percent);\n  // Break\n  if (Y1 + X1 + X2 > 100.0) {\n    OVER = 100.0 / (Y1 + X1 + X2);\n  } else if (-100.0 > Y1 + X1 + X2) {\n    OVER = 100.0 / (Y1 + X1 + X2);\n  \n  } else if (Y1 - X1 - X2 > 100.0) {\n    OVER = 100.0 / (Y1 - X1 - X2);\n  } else if (-100.0 > Y1 - X1 - X2) {\n    OVER = 100.0 / (Y1 - X1 - X2);\n\n  } else if (Y1 + X1 - X2 > 100.0) {\n    // Break\n    OVER = 100.0 / (Y1 + X1 - X2);\n  } else if (-100.0 > Y1 + X1 - X2) {\n    // Break\n    OVER = 100.0 / (Y1 + X1 - X2);\n  \n  }\n   else if (Y1 - X1 + X2 > 100.0) {\n      OVER = 100.0 / (Y1 - X1 + X2);\n    } else if (-100.0 > Y1 - X1 + X2) {\n      OVER = 100.0 / (Y1 - X1 + X2);\n    \n    } else {\n      OVER = 1.0; //Won't Affect Wheel Speed At All\n    }\n  } \n\n\n\nint whenStarted1() {\n  Motor1.spin(forward); //Setting Up Variables and Motors\n  Motor2.spin(forward);\n  Motor3.spin(forward);\n  Motor4.spin(forward);\n  OVER = 1.0;\n \n Controller1.ButtonX.pressed(vexSystemExitRequest);\n  \n\n  while (true) {\n    Mecanum();\n    wait(5, msec);\n  }\n}\n\n\n\n\nint main() {\n  // set default print color to black\n  printf(\"\\033[30m\");\n  whenStarted1(); //Start Main Loop\n}","textLanguage":"cpp","rconfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[1],"name":"Motor1","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[2],"name":"Motor2","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[3],"name":"Motor3","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[4],"name":"Motor4","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22}],"slot":1,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.4","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}
